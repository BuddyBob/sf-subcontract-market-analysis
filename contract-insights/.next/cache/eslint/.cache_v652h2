[{"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/hero.tsx":"1","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/kpi-cards.tsx":"2","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/navigation.tsx":"3","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/theme-provider.tsx":"4","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/accordion.tsx":"5","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/button.tsx":"6","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/card.tsx":"7","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/select.tsx":"8","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/table.tsx":"9","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/context/DataContext.tsx":"10","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-dominant-subcontractors.ts":"11","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-lbe-analysis.ts":"12","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-market-concentration.ts":"13","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-scope-aggregation.ts":"14","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/lib/utils.ts":"15","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/_app.tsx":"16","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/concentration.tsx":"17","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/dominant-firms.tsx":"18","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/downloads.tsx":"19","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/index.tsx":"20","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/lbe-equity.tsx":"21"},{"size":2016,"mtime":1753123082071,"results":"22","hashOfConfig":"23"},{"size":4224,"mtime":1753125238972,"results":"24","hashOfConfig":"23"},{"size":4858,"mtime":1753123082071,"results":"25","hashOfConfig":"23"},{"size":1683,"mtime":1753126988978,"results":"26","hashOfConfig":"23"},{"size":1912,"mtime":1753123082092,"results":"27","hashOfConfig":"23"},{"size":1631,"mtime":1753123082065,"results":"28","hashOfConfig":"23"},{"size":1956,"mtime":1753123082071,"results":"29","hashOfConfig":"23"},{"size":912,"mtime":1753123082121,"results":"30","hashOfConfig":"23"},{"size":2749,"mtime":1753123082092,"results":"31","hashOfConfig":"23"},{"size":6730,"mtime":1753132363696,"results":"32","hashOfConfig":"23"},{"size":1299,"mtime":1753123082057,"results":"33","hashOfConfig":"23"},{"size":977,"mtime":1753123082057,"results":"34","hashOfConfig":"23"},{"size":1044,"mtime":1753123082052,"results":"35","hashOfConfig":"23"},{"size":1395,"mtime":1753124414002,"results":"36","hashOfConfig":"23"},{"size":2286,"mtime":1753123315531,"results":"37","hashOfConfig":"23"},{"size":1388,"mtime":1753123082071,"results":"38","hashOfConfig":"23"},{"size":16889,"mtime":1753132466698,"results":"39","hashOfConfig":"23"},{"size":15312,"mtime":1753132431693,"results":"40","hashOfConfig":"23"},{"size":10798,"mtime":1753123082092,"results":"41","hashOfConfig":"23"},{"size":3437,"mtime":1753125238972,"results":"42","hashOfConfig":"23"},{"size":19998,"mtime":1753132162695,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hczi8g",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/hero.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/kpi-cards.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/navigation.tsx",["110"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { Moon, Sun, Menu, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\nconst navigation = [\n  { name: 'Overview', href: '/' },\n  { name: 'Concentration', href: '/concentration' },\n  { name: 'LBE Equity', href: '/lbe-equity' },\n  { name: 'Dominant Firms', href: '/dominant-firms' },\n  { name: 'Downloads', href: '/downloads' },\n];\n\ninterface NavigationProps {\n  darkMode: boolean;\n  setDarkMode: (darkMode: boolean) => void;\n}\n\nexport function Navigation({ darkMode, setDarkMode }: NavigationProps) {\n  const pathname = usePathname();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  return (\n    <nav className=\"sticky top-0 z-50 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex-shrink-0 flex items-center\">\n              <div className=\"h-8 w-8 bg-primary rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-lg\">SF</span>\n              </div>\n              <span className=\"ml-2 text-xl font-semibold text-gray-900 dark:text-white\">\n                Contract Insights\n              </span>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={cn(\n                  'px-3 py-2 rounded-md text-sm font-medium transition-colors',\n                  pathname === item.href\n                    ? 'bg-primary-100 text-primary-700 dark:bg-primary-800 dark:text-primary-200'\n                    : 'text-gray-500 hover:text-gray-700 dark:text-gray-300 dark:hover:text-white'\n                )}\n                aria-label={`Navigate to ${item.name}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </div>\n\n          {/* Theme Toggle */}\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setDarkMode(!darkMode)}\n              aria-label=\"Toggle dark mode\"\n              className=\"hidden md:inline-flex\"\n            >\n              {darkMode ? (\n                <Sun className=\"h-5 w-5\" />\n              ) : (\n                <Moon className=\"h-5 w-5\" />\n              )}\n            </Button>\n\n            {/* Mobile menu button */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"md:hidden\"\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              aria-label=\"Toggle mobile menu\"\n            >\n              {mobileMenuOpen ? (\n                <X className=\"h-5 w-5\" />\n              ) : (\n                <Menu className=\"h-5 w-5\" />\n              )}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation */}\n      {mobileMenuOpen && (\n        <div className=\"md:hidden\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={cn(\n                  'block px-3 py-2 rounded-md text-base font-medium transition-colors',\n                  pathname === item.href\n                    ? 'bg-primary-100 text-primary-700 dark:bg-primary-800 dark:text-primary-200'\n                    : 'text-gray-500 hover:text-gray-700 dark:text-gray-300 dark:hover:text-white'\n                )}\n                onClick={() => setMobileMenuOpen(false)}\n              >\n                {item.name}\n              </Link>\n            ))}\n            <div className=\"px-3 py-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setDarkMode(!darkMode)}\n                aria-label=\"Toggle dark mode\"\n                className=\"w-full justify-start\"\n              >\n                {darkMode ? (\n                  <>\n                    <Sun className=\"h-4 w-4 mr-2\" />\n                    Light Mode\n                  </>\n                ) : (\n                  <>\n                    <Moon className=\"h-4 w-4 mr-2\" />\n                    Dark Mode\n                  </>\n                )}\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/theme-provider.tsx",["111"],[],"'use client';\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ninterface ThemeContextType {\n  darkMode: boolean;\n  setDarkMode: (darkMode: boolean) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: ReactNode }) {\n  const [darkMode, setDarkMode] = useState(false);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('theme');\n    \n    // Only set dark mode if explicitly saved as 'dark'\n    if (savedTheme === 'dark') {\n      setDarkMode(true);\n    } else {\n      // Default to light mode regardless of system preference\n      setDarkMode(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (mounted) {\n      if (darkMode) {\n        document.documentElement.classList.add('dark');\n        localStorage.setItem('theme', 'dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n        localStorage.setItem('theme', 'light');\n      }\n    }\n  }, [darkMode, mounted]);\n\n  // Prevent hydration mismatch\n  if (!mounted) {\n    return <>{children}</>;\n  }\n\n  const value: ThemeContextType = {\n    darkMode,\n    setDarkMode,\n  };\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>;\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    // Return default values during SSR or if not in provider\n    return {\n      darkMode: false,\n      setDarkMode: () => {},\n    };\n  }\n  return context;\n}\n","/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/accordion.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/button.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/card.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/select.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/components/ui/table.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/context/DataContext.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-dominant-subcontractors.ts",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-lbe-analysis.ts",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-market-concentration.ts",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/data/sample-scope-aggregation.ts",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/lib/utils.ts",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/_app.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/concentration.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/dominant-firms.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/downloads.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/index.tsx",[],[],"/Users/thavasantonio/Documents/BidAnalysis2/contract-insights/src/pages/lbe-equity.tsx",["112","113","114","115","116","117","118","119","120","121"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useData } from '@/context/DataContext';\nimport { formatCurrency, formatPercent, getLbeEquityColor } from '@/lib/utils';\nimport { ArrowUpDown, Users, DollarSign, TrendingUp, Building2, Search } from 'lucide-react';\n\nexport default function LbeEquityPage() {\n  const { lbeAnalysis, isLoading } = useData();\n  const [sortBy, setSortBy] = useState<'lbeShare' | 'totalSpend' | 'lbeCount' | 'scope'>('lbeShare');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('desc');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  if (isLoading) {\n    return (\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-6\"></div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          <div className=\"h-96 bg-gray-200 rounded\"></div>\n          <div className=\"h-96 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  // Calculate overall LBE statistics and performance metrics\n  const totalDollars = lbeAnalysis.reduce((sum, item) => sum + item.Total_Dollars, 0);\n  const totalLbeDollars = lbeAnalysis.reduce(\n    (sum, item) => sum + (item.Total_Dollars * item.LBE_Dollar_Share), \n    0\n  );\n  const overallLbeShare = totalDollars > 0 ? totalLbeDollars / totalDollars : 0;\n\n  // Performance metrics for LBE vs Non-LBE\n  const totalLbeCount = lbeAnalysis.reduce((sum, item) => sum + item.LBE_Count, 0);\n  const totalSubsCount = lbeAnalysis.reduce((sum, item) => sum + item.Total_Subs, 0);\n  const totalNonLbeCount = totalSubsCount - totalLbeCount;\n  const totalNonLbeDollars = totalDollars - totalLbeDollars;\n  \n  const avgLbeContractSize = totalLbeCount > 0 ? totalLbeDollars / totalLbeCount : 0;\n  const avgNonLbeContractSize = totalNonLbeCount > 0 ? totalNonLbeDollars / totalNonLbeCount : 0;\n\n  // Prepare donut chart data\n  const donutData = [\n    {\n      name: 'LBE Spend',\n      value: totalLbeDollars,\n      color: '#00795C'\n    },\n    {\n      name: 'Non-LBE Spend',\n      value: totalDollars - totalLbeDollars,\n      color: '#D92F2F'\n    }\n  ];\n\n  // Prepare scopes with concerning LBE shares\n  const concerningScopes = lbeAnalysis\n    .filter(item => item.LBE_Dollar_Share < 0.25 || item.LBE_Dollar_Share > 0.75)\n    .sort((a, b) => a.LBE_Dollar_Share - b.LBE_Dollar_Share)\n    .slice(0, 10);\n\n  // Prepare bar chart data for LBE rates\n  const scopeData = lbeAnalysis\n    .filter(item => item.Total_Dollars && item.Total_Dollars > 0) // Filter out invalid data\n    .sort((a, b) => b.Total_Dollars - a.Total_Dollars)\n    .slice(0, 10)\n    .map(item => ({\n      scope: item['Scope of Work'].length > 30 \n        ? item['Scope of Work'].substring(0, 30) + '...' \n        : item['Scope of Work'],\n      fullScope: item['Scope of Work'],\n      lbeShare: Number(item.LBE_Dollar_Share) || 0, // Ensure it's a number\n      totalSpend: Number(item.Total_Dollars) || 0,\n      lbeCount: Number(item.LBE_Count) || 0,\n      totalSubs: Number(item.Total_Subs) || 0\n    }));\n\n  const renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }: any) => {\n    if (percent < 0.05) return null; // Don't show labels for very small slices\n    \n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text \n        x={x} \n        y={y} \n        fill=\"white\" \n        textAnchor={x > cx ? 'start' : 'end'} \n        dominantBaseline=\"central\"\n        fontSize=\"14\"\n        fontWeight=\"bold\"\n      >\n        {`${(percent * 100).toFixed(1)}%`}\n      </text>\n    );\n  };\n\n  const CustomTooltip = ({ active, payload }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\n          <p className=\"font-semibold text-gray-900 dark:text-white\">{data.fullScope}</p>\n          <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n            <span className=\"font-medium\">LBE Share:</span> {formatPercent(data.lbeShare)}\n          </p>\n          <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n            <span className=\"font-medium\">Total Spend:</span> {formatCurrency(data.totalSpend)}\n          </p>\n          <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n            <span className=\"font-medium\">LBE/Total Subs:</span> {data.lbeCount}/{data.totalSubs}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 animate-fade-in\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n          LBE Equity Analysis\n        </h1>\n        <p className=\"text-lg text-gray-600 dark:text-gray-300\">\n          Local Business Enterprise participation and equity assessment\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n        {/* LBE vs Non-LBE Donut Chart */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Overall LBE Spend Distribution</CardTitle>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {formatPercent(overallLbeShare)} LBE participation across all scopes\n            </p>\n          </CardHeader>\n          <CardContent>\n            <div className=\"chart-container\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={donutData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius={120}\n                    innerRadius={60}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {donutData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip \n                    formatter={(value: number) => [formatCurrency(value), 'Amount']}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"flex justify-center mt-4 space-x-6\">\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-primary-500 rounded-full mr-2\"></div>\n                <span className=\"text-sm text-gray-600 dark:text-gray-300\">LBE Spend</span>\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"w-3 h-3 bg-danger-500 rounded-full mr-2\"></div>\n                <span className=\"text-sm text-gray-600 dark:text-gray-300\">Non-LBE Spend</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* LBE vs Non-LBE Performance Comparison */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5 text-primary-600\" />\n            LBE vs Non-LBE Performance Comparison\n          </CardTitle>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Market share, contractor counts, and average contract sizes\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {/* Market Share */}\n            <div className=\"text-center p-4 bg-primary-50 dark:bg-primary-900/20 rounded-lg\">\n              <div className=\"flex items-center justify-center mb-2\">\n                <DollarSign className=\"h-6 w-6 text-primary-600\" />\n              </div>\n              <div className=\"text-2xl font-bold text-primary-800 dark:text-primary-200\">\n                {formatPercent(overallLbeShare)}\n              </div>\n              <div className=\"text-sm text-primary-600 dark:text-primary-300 font-medium\">LBE Market Share</div>\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {formatCurrency(totalLbeDollars)} of {formatCurrency(totalDollars)}\n              </div>\n            </div>\n\n            <div className=\"text-center p-4 bg-danger-50 dark:bg-danger-900/20 rounded-lg\">\n              <div className=\"flex items-center justify-center mb-2\">\n                <DollarSign className=\"h-6 w-6 text-danger-600\" />\n              </div>\n              <div className=\"text-2xl font-bold text-danger-800 dark:text-danger-200\">\n                {formatPercent(1 - overallLbeShare)}\n              </div>\n              <div className=\"text-sm text-danger-600 dark:text-danger-300 font-medium\">Non-LBE Market Share</div>\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {formatCurrency(totalNonLbeDollars)} of {formatCurrency(totalDollars)}\n              </div>\n            </div>\n\n            {/* Contractor Counts */}\n            <div className=\"text-center p-4 bg-secondary-50 dark:bg-secondary-900/20 rounded-lg\">\n              <div className=\"flex items-center justify-center mb-2\">\n                <Users className=\"h-6 w-6 text-secondary-600\" />\n              </div>\n              <div className=\"text-2xl font-bold text-secondary-800 dark:text-secondary-200\">\n                {totalLbeCount}\n              </div>\n              <div className=\"text-sm text-secondary-600 dark:text-secondary-300 font-medium\">LBE Contractors</div>\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {formatPercent(totalLbeCount / totalSubsCount)} of total\n              </div>\n            </div>\n\n            <div className=\"text-center p-4 bg-warning-50 dark:bg-warning-900/20 rounded-lg\">\n              <div className=\"flex items-center justify-center mb-2\">\n                <Users className=\"h-6 w-6 text-warning-600\" />\n              </div>\n              <div className=\"text-2xl font-bold text-warning-800 dark:text-warning-200\">\n                {totalNonLbeCount}\n              </div>\n              <div className=\"text-sm text-warning-600 dark:text-warning-300 font-medium\">Non-LBE Contractors</div>\n              <div className=\"text-xs text-gray-500 mt-1\">\n                {formatPercent(totalNonLbeCount / totalSubsCount)} of total\n              </div>\n            </div>\n          </div>\n\n          \n        </CardContent>\n      </Card>\n\n      {/* Comprehensive LBE Participation Table */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <CardTitle>All Scopes LBE Participation</CardTitle>\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Complete overview of LBE participation across all {lbeAnalysis.length} scopes\n              </p>\n              <div className=\"flex items-center gap-2\">\n                <label className=\"text-sm text-gray-600 dark:text-gray-300\">Sort by:</label>\n                <select\n                  value={sortBy}\n                  onChange={(e) => setSortBy(e.target.value as any)}\n                  className=\"text-sm bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded px-2 py-1\"\n                >\n                  <option value=\"lbeShare\">LBE Share</option>\n                  <option value=\"totalSpend\">Total Spend</option>\n                  <option value=\"lbeCount\">LBE Count</option>\n                  <option value=\"scope\">Scope Name</option>\n                </select>\n                <button\n                  onClick={() => setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')}\n                  className=\"flex items-center gap-1 px-2 py-1 text-sm bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <ArrowUpDown className=\"h-3 w-3\" />\n                  {sortDirection === 'desc' ? 'Desc' : 'Asc'}\n                </button>\n              </div>\n            </div>\n            \n            {/* Search Field */}\n            <div className=\"flex items-center gap-2 max-w-md\">\n              <div className=\"relative flex-1\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search scopes...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                />\n              </div>\n              {searchTerm && (\n                <button\n                  onClick={() => setSearchTerm('')}\n                  className=\"px-3 py-2 text-sm text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white\"\n                >\n                  Clear\n                </button>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-900 dark:text-white\">Scope of Work</th>\n                  <th className=\"text-center py-3 px-4 font-medium text-gray-900 dark:text-white\">LBE Share</th>\n                  <th className=\"text-center py-3 px-4 font-medium text-gray-900 dark:text-white\">LBE Count</th>\n                  <th className=\"text-center py-3 px-4 font-medium text-gray-900 dark:text-white\">Total Subs</th>\n                  <th className=\"text-right py-3 px-4 font-medium text-gray-900 dark:text-white\">Total Spend</th>\n                </tr>\n              </thead>\n              <tbody>\n                {lbeAnalysis\n                  .filter(scope => \n                    scope['Scope of Work'].toLowerCase().includes(searchTerm.toLowerCase())\n                  )\n                  .sort((a, b) => {\n                    let valueA, valueB;\n                    switch (sortBy) {\n                      case 'lbeShare':\n                        valueA = a.LBE_Dollar_Share || 0;\n                        valueB = b.LBE_Dollar_Share || 0;\n                        break;\n                      case 'totalSpend':\n                        valueA = a.Total_Dollars || 0;\n                        valueB = b.Total_Dollars || 0;\n                        break;\n                      case 'lbeCount':\n                        valueA = a.LBE_Count || 0;\n                        valueB = b.LBE_Count || 0;\n                        break;\n                      case 'scope':\n                        valueA = a['Scope of Work'];\n                        valueB = b['Scope of Work'];\n                        break;\n                      default:\n                        valueA = a.LBE_Dollar_Share || 0;\n                        valueB = b.LBE_Dollar_Share || 0;\n                    }\n                    \n                    if (typeof valueA === 'string' && typeof valueB === 'string') {\n                      return sortDirection === 'desc' \n                        ? valueB.localeCompare(valueA)\n                        : valueA.localeCompare(valueB);\n                    }\n                    \n                    return sortDirection === 'desc' \n                      ? (valueB as number) - (valueA as number)\n                      : (valueA as number) - (valueB as number);\n                  })\n                  .map((scope, index) => (\n                  <tr key={index} className=\"border-b border-gray-100 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-800\">\n                    <td className=\"py-3 px-4 text-gray-900 dark:text-white\">\n                      {scope['Scope of Work']}\n                    </td>\n                    <td className=\"py-3 px-4 text-center\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getLbeEquityColor(scope.LBE_Dollar_Share)}`}>\n                        {formatPercent(scope.LBE_Dollar_Share || 0)}\n                      </span>\n                    </td>\n                    <td className=\"py-3 px-4 text-center text-gray-600 dark:text-gray-300\">\n                      {scope.LBE_Count || 0}\n                    </td>\n                    <td className=\"py-3 px-4 text-center text-gray-600 dark:text-gray-300\">\n                      {scope.Total_Subs || 0}\n                    </td>\n                    <td className=\"py-3 px-4 text-right text-gray-600 dark:text-gray-300\">\n                      {formatCurrency(scope.Total_Dollars || 0)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Concerning LBE Equity Scopes */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Scopes Requiring Attention</CardTitle>\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Scopes with very low (&lt;25%) or very high (&gt;75%) LBE participation\n          </p>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b border-gray-200 dark:border-gray-700\">\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-900 dark:text-white\">Scope of Work</th>\n                  <th className=\"text-center py-3 px-4 font-medium text-gray-900 dark:text-white\">LBE Share</th>\n                  <th className=\"text-center py-3 px-4 font-medium text-gray-900 dark:text-white\">LBE Count</th>\n                  <th className=\"text-center py-3 px-4 font-medium text-gray-900 dark:text-white\">Total Subs</th>\n                  <th className=\"text-right py-3 px-4 font-medium text-gray-900 dark:text-white\">Total Spend</th>\n                </tr>\n              </thead>\n              <tbody>\n                {concerningScopes.map((scope, index) => (\n                  <tr key={index} className=\"border-b border-gray-100 dark:border-gray-800 hover:bg-gray-50 dark:hover:bg-gray-800\">\n                    <td className=\"py-3 px-4 text-gray-900 dark:text-white\">\n                      {scope['Scope of Work']}\n                    </td>\n                    <td className=\"py-3 px-4 text-center\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getLbeEquityColor(scope.LBE_Dollar_Share)}`}>\n                        {formatPercent(scope.LBE_Dollar_Share)}\n                      </span>\n                    </td>\n                    <td className=\"py-3 px-4 text-center text-gray-600 dark:text-gray-300\">\n                      {scope.LBE_Count}\n                    </td>\n                    <td className=\"py-3 px-4 text-center text-gray-600 dark:text-gray-300\">\n                      {scope.Total_Subs}\n                    </td>\n                    <td className=\"py-3 px-4 text-right text-gray-600 dark:text-gray-300\">\n                      {formatCurrency(scope.Total_Dollars)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n",{"ruleId":"122","severity":1,"message":"123","line":20,"column":17,"nodeType":"124","messageId":"125","endLine":20,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":7,"column":17,"nodeType":"124","messageId":"125","endLine":7,"endColumn":34},{"ruleId":"122","severity":1,"message":"126","line":4,"column":52,"nodeType":"124","messageId":"125","endLine":4,"endColumn":60},{"ruleId":"122","severity":1,"message":"127","line":4,"column":62,"nodeType":"124","messageId":"125","endLine":4,"endColumn":65},{"ruleId":"122","severity":1,"message":"128","line":4,"column":67,"nodeType":"124","messageId":"125","endLine":4,"endColumn":72},{"ruleId":"122","severity":1,"message":"129","line":4,"column":74,"nodeType":"124","messageId":"125","endLine":4,"endColumn":79},{"ruleId":"122","severity":1,"message":"130","line":4,"column":81,"nodeType":"124","messageId":"125","endLine":4,"endColumn":94},{"ruleId":"122","severity":1,"message":"131","line":8,"column":54,"nodeType":"124","messageId":"125","endLine":8,"endColumn":63},{"ruleId":"122","severity":1,"message":"132","line":42,"column":9,"nodeType":"124","messageId":"125","endLine":42,"endColumn":27},{"ruleId":"122","severity":1,"message":"133","line":43,"column":9,"nodeType":"124","messageId":"125","endLine":43,"endColumn":30},{"ruleId":"122","severity":1,"message":"134","line":66,"column":9,"nodeType":"124","messageId":"125","endLine":66,"endColumn":18},{"ruleId":"122","severity":1,"message":"135","line":104,"column":9,"nodeType":"124","messageId":"125","endLine":104,"endColumn":22},"no-unused-vars","'darkMode' is defined but never used.","Identifier","unusedVar","'BarChart' is defined but never used.","'Bar' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'Building2' is defined but never used.","'avgLbeContractSize' is assigned a value but never used.","'avgNonLbeContractSize' is assigned a value but never used.","'scopeData' is assigned a value but never used.","'CustomTooltip' is assigned a value but never used."]